{"version":3,"sources":["styles/index.js","utils/API.js","components/SearchBar.js","components/DayCard.js","components/DayDetails.js","App.js","reportWebVitals.js","index.js"],"names":["gray","teal","outline","tealOutline","Wrapper","styled","Container","FormWrapper","Form","DayWrapper","section","isSelected","DetailsWrapper","Card","location","axios","get","process","then","res","data","results","length","alert","geometry","lat","lon","lng","catch","err","console","log","SearchBar","searchTerm","handleInputChange","handleFormSubmit","inline","onSubmit","FormGroup","Label","for","hidden","Input","type","name","id","placeholder","value","onChange","Button","DayCard","selectDay","day","temp","icon","description","high","low","precip","Col","onClick","CardHeader","CardBody","toFixed","src","alt","DayDetails","appHigh","appLow","humidity","windDir","windSpd","toUpperCase","substring","App","useState","days","selectedDay","weatherInfo","setWeatherInfo","useEffect","getWeather","document","title","API","city_name","state_code","Row","md","e","target","preventDefault","map","moment","valid_date","format","high_temp","low_temp","weather","pop","ts","className","role","app_max_temp","app_min_temp","rh","windSpeed","wind_spd","wind_cdir_full","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bb8a0ce.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Container, Form, Card } from \"reactstrap\";\r\n\r\nconst gray = \"#ccc\";\r\nconst teal = \"#008080\";\r\nconst outline = `2px solid ${gray}`;\r\nconst tealOutline = `2px solid ${teal}`;\r\n\r\nexport const Wrapper = styled(Container)`\r\n  h1 {\r\n    font-size: 2.25rem;\r\n    font-weight: 700;\r\n  }\r\n  h3 {\r\n    font-weight: 700;\r\n  }\r\n  .row {\r\n    margin-bottom: 1rem;\r\n    :first-child {\r\n      align-items: center;\r\n      margin-top: 0.75rem;\r\n    }\r\n    :last-child {\r\n      margin-bottom: 2rem;\r\n    }\r\n  }\r\n  .loading-spinner {\r\n    justify-content: center;\r\n    margin: 5rem 0;\r\n    width: 100%;\r\n  }\r\n  .spinner-border {\r\n    border-color: ${teal};\r\n    border-right-color: transparent;\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled(Form)`\r\n  justify-content: flex-end;\r\n  input.form-control {\r\n    border-color: ${gray};\r\n    border-radius: 0.25rem 0 0 0.25rem;\r\n    border-right-width: 0;\r\n    width: 350px;\r\n  }\r\n  button {\r\n    background: ${teal};\r\n    border-radius: 0 0.25rem 0.25rem 0;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const DayWrapper = styled.section`\r\n  text-align: center;\r\n  :hover {\r\n    cursor: pointer;\r\n    .card {\r\n      border-color: ${teal};\r\n    }\r\n  }\r\n  h3 {\r\n    font-weight: 700;\r\n  }\r\n  img {\r\n    width: 80px;\r\n  }\r\n  .card {\r\n    border: ${({ isSelected }) => (isSelected ? tealOutline : outline)};\r\n  }\r\n  .card-header {\r\n    background: ${({ isSelected }) => (isSelected ? teal : null)};\r\n    border-bottom: ${({ isSelected }) => (isSelected ? tealOutline : outline)};\r\n    color: ${({ isSelected }) => (isSelected ? \"#fff\" : null)};\r\n    font-weight: 700;\r\n  }\r\n  .card-body {\r\n    padding: 1.25rem 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const DetailsWrapper = styled(Card)`\r\n  border: ${tealOutline};\r\n  padding: 1.5rem;\r\n  text-align: center;\r\n  h2 {\r\n    font-weight: 700;\r\n  }\r\n  h3 {\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 0.5rem;\r\n  }\r\n  img {\r\n    align-self: center;\r\n    width: 150px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nconst googleKey = process.env.REACT_APP_GOOGLE_KEY;\r\nconst weatherbitKey = process.env.REACT_APP_WEATHER_KEY;\r\n\r\nexport default {\r\n  getWeather: function (location) {\r\n    return axios\r\n      .get(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${googleKey}`\r\n      )\r\n      .then((res) => {\r\n        // if no matching locations are found, break out/don't hit WeatherBit API\r\n        if (!res.data.results.length) return alert(\"Not a valid location!\");\r\n\r\n        // else extract the lat/lng (and rename lng to lon)\r\n        const { lat, lng: lon } = res.data.results[0].geometry.location;\r\n        // then make call to WeatherBit API using lat/lon\r\n        return axios.get(\r\n          `https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=I&days=7&key=${weatherbitKey}`\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { FormWrapper } from \"../styles\";\r\n\r\nconst SearchBar = ({ searchTerm, handleInputChange, handleFormSubmit }) => {\r\n  return (\r\n    <FormWrapper inline onSubmit={handleFormSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"searchTerm\" hidden>\r\n          Search by Location:\r\n        </Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"searchTerm\"\r\n          id=\"searchTerm\"\r\n          placeholder=\"Mount Rushmore OR 10014 OR Denver, CO\"\r\n          value={searchTerm}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormGroup>\r\n      <Button>Search</Button>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Col, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport { DayWrapper } from \"../styles\";\r\n\r\nconst DayCard = ({\r\n  isSelected,\r\n  selectDay,\r\n  day,\r\n  temp,\r\n  icon,\r\n  description,\r\n  high,\r\n  low,\r\n  precip\r\n}) => {\r\n  return (\r\n    <Col>\r\n      <DayWrapper isSelected={isSelected} onClick={selectDay}>\r\n        <Card>\r\n          <CardHeader>{day}</CardHeader>\r\n          <CardBody>\r\n            <h3>{temp.toFixed(1)}°</h3>\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/icons/${icon}.png`}\r\n              alt={description}\r\n            />\r\n            <p>\r\n              <strong>High:</strong> {high.toFixed(1)}°\r\n            </p>\r\n            <p>\r\n              <strong>Low:</strong> {low.toFixed(1)}°\r\n            </p>\r\n            <p>\r\n              <strong>Precip:</strong> {precip}%\r\n            </p>\r\n          </CardBody>\r\n        </Card>\r\n      </DayWrapper>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n","import React from \"react\";\r\nimport { DetailsWrapper } from \"../styles\";\r\n\r\nconst DayDetails = ({\r\n  appHigh,\r\n  appLow,\r\n  day,\r\n  description,\r\n  high,\r\n  humidity,\r\n  icon,\r\n  low,\r\n  precip,\r\n  temp,\r\n  windDir,\r\n  windSpd\r\n}) => {\r\n  return (\r\n    <DetailsWrapper>\r\n      <h2>Day Details for {day}:</h2>\r\n      <h3>{temp.toFixed(1)}°</h3>\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/icons/${icon}.png`}\r\n        alt={description}\r\n      />\r\n      <p>\r\n        <em>{description}</em>\r\n      </p>\r\n      <p>\r\n        <strong>High:</strong> {high.toFixed(1)}° | <strong>Feels Like:</strong>{\" \"}\r\n        {appHigh.toFixed(1)}°\r\n      </p>\r\n      <p>\r\n        <strong>Low:</strong> {low.toFixed(1)}° | <strong>Feels Like:</strong>{\" \"}\r\n        {appLow.toFixed(1)}°\r\n      </p>\r\n      <p>\r\n        <strong>Likelihood of Precipitation:</strong> {precip}% |{\" \"}\r\n        <strong>Relative Humidity:</strong> {humidity}%\r\n      </p>\r\n      <p>\r\n        <strong>Wind Speed:</strong> {(windSpd * 2.237).toFixed(2)}mph |{\" \"}\r\n        <strong>Wind Direction:</strong>{\" \"}\r\n        {windDir[0].toUpperCase() + windDir.substring(1)}\r\n      </p>\r\n    </DetailsWrapper>\r\n  );\r\n};\r\n\r\nexport default DayDetails;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { Wrapper } from \"./styles\";\nimport moment from \"moment\";\nimport API from \"./utils/API\";\nimport SearchBar from \"./components/SearchBar\";\nimport DayCard from \"./components/DayCard\";\nimport DayDetails from \"./components/DayDetails\";\n\nfunction App() {\n  const [weatherInfo, setWeatherInfo] = useState({\n    location: \"\",\n    days: [],\n    selectedDay: null,\n    searchTerm: \"\"\n  });\n\n  const { location, days, selectedDay, searchTerm } = weatherInfo;\n\n  useEffect(() => {\n    getWeather(\"Denver, CO\");\n  }, []);\n\n  useEffect(() => {\n    document.title = `${\n      location ? \"Weather Info for \" + location : \"Find weather by location\"\n    }`;\n  }, [location]);\n\n  const getWeather = (location) => {\n    if (!location) {\n      return alert(\"Enter a location to get weather data!\");\n    }\n\n    API.getWeather(location)\n      .then((res) => {\n        if (!res) return;\n        setWeatherInfo({\n          searchTerm: \"\",\n          selectedDay: null,\n          location: `${res.data.city_name}, ${res.data.state_code}`,\n          days: res.data.data\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setWeatherInfo({ ...weatherInfo, [name]: value });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    getWeather(searchTerm);\n  };\n\n  return (\n    <Wrapper>\n      <Row>\n        <Col md={7}>\n          <h1>\n            {location ? \"Weather Info for \" + location : \"Search by Location:\"}\n          </h1>\n        </Col>\n        <Col md={5}>\n          <SearchBar\n            searchTerm={searchTerm}\n            handleInputChange={handleInputChange}\n            handleFormSubmit={handleFormSubmit}\n          />\n        </Col>\n      </Row>\n      <Row>\n        {days.length ? (\n          <>\n            {days.map((day) => (\n              <DayCard\n                key={day.ts}\n                day={moment(day.valid_date, \"YYYY-MM-DD\").format(\"dddd\")}\n                temp={day.temp}\n                high={day.high_temp}\n                low={day.low_temp}\n                icon={day.weather.icon}\n                description={day.weather.description}\n                precip={day.pop}\n                isSelected={day === selectedDay}\n                selectDay={() =>\n                  setWeatherInfo({ ...weatherInfo, selectedDay: day })\n                }\n              />\n            ))}\n          </>\n        ) : (\n          <div className=\"d-flex loading-spinner\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )}\n      </Row>\n      <Row>\n        <Col>\n          {selectedDay ? (\n            <DayDetails\n              day={moment(selectedDay.valid_date, \"YYYY-MM-DD\").format(\n                \"dddd, MMMM Do, YYYY\"\n              )}\n              temp={selectedDay.temp}\n              high={selectedDay.high_temp}\n              appHigh={selectedDay.app_max_temp}\n              low={selectedDay.low_temp}\n              appLow={selectedDay.app_min_temp}\n              icon={selectedDay.weather.icon}\n              description={selectedDay.weather.description}\n              precip={selectedDay.pop}\n              humidity={selectedDay.rh}\n              windSpeed={selectedDay.wind_spd}\n              windDir={selectedDay.wind_cdir_full}\n            />\n          ) : (\n            <h3>\n              {days.length ? \"Click on a day above to view details!\" : null}\n            </h3>\n          )}\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}